
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    #default_type  application/octet-stream;


    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Define services with UPSTREAM
	upstream marketplace-service {
		server marketplace-service:8443;
	}

	upstream auth-service {
		server auth-service:8080;
	}

    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      /usr/share/nginx/cert.pem;
        ssl_certificate_key  /usr/share/nginx/cert.key;


        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
			root /usr/share/nginx/html;
			index index.html index.htm;
			try_files $uri $uri/ /index.html =404;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

		location /categories/ {
			proxy_pass https://marketplace-service/categories/;
			# proxy_http_version 1.1;
			# proxy_set_header Upgrade $http_upgrade;
			# proxy_set_header Connection 'upgrade';
			# proxy_set_header Host $host;
			# proxy_redirect off;
			# proxy_set_header X-Real-IP $remote_addr;
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_cache_bypass $http_upgrade;
		}

		location /topics {
			proxy_pass https://marketplace-service/topics;
			# proxy_http_version 1.1;
			# proxy_set_header Upgrade $http_upgrade;
			# proxy_set_header Connection 'upgrade';
			# proxy_set_header Host $host;
			# proxy_redirect off;
			# proxy_set_header X-Real-IP $remote_addr;
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_cache_bypass $http_upgrade;
		}

		location /auth/ {
			proxy_pass http://auth-service/auth/;
			# proxy_http_version 1.1;
			# proxy_set_header Upgrade $http_upgrade;
			# proxy_set_header Connection 'upgrade';
			# proxy_set_header Host $host;
			# proxy_redirect off;
			# proxy_set_header X-Real-IP $remote_addr;
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_cache_bypass $http_upgrade;
		}

		location /info {
			stub_status;
			allow all;
		}

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}





# SSL configuration
#
# listen 443 ssl default_server;
# listen [::]:443 ssl default_server;
#
# Note: You should disable gzip for SSL traffic.
# See: https://bugs.debian.org/773332
#
# Read up on ssl_ciphers to ensure a secure configuration.
# See: https://bugs.debian.org/765782
#
# Self signed certs generated by the ssl-cert package
# Don't use them in a production server!
#
# include snippets/snakeoil.conf;








# To copy the config in DOCKERFILE
# COPY nginx.conf /etc/nginx/nginx.conf
