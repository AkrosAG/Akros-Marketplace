# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run a linter across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Cypress

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  docker-admin-ui:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Load cached Docker admin ui layers
        uses: actions/cache@v2
        with:
          path: /tmp/.cypress-au-cache
          key: ${{ runner.os }}-cypress-au-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cypress-au-

      - name: Build admin ui
        uses: docker/build-push-action@v2
        with:
          file: ./admin-ui/Dockerfile
          context: .
          push: false
          load: true
          tags: admin-ui:latest
          cache-from: type=local,src=/tmp/.cypress-au-cache
          cache-to: type=local,mode=max,dest=/tmp/.cypress-au-cache-new
          outputs: type=docker,dest=/tmp/au.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: au
          path: /tmp/au.tar

      - name: Move cache
        run: |
          rm -rf /tmp/.cypress-au-cache
          mv /tmp/.cypress-au-cache-new /tmp/.cypress-au-cache

  docker-marketplace-service:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Load cached Docker marketplace service layers
        uses: actions/cache@v2
        with:
          path: /tmp/.cypress-ms-cache
          key: ${{ runner.os }}-cypress-ms-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cypress-ms-

      - name: Build marketplace-service
        uses: docker/build-push-action@v2
        with:
          file: ./marketplace-service/Dockerfile
          context: .
          push: false
          load: true
          tags: marketplace-service:latest
          cache-from: type=local,src=/tmp/.cypress-ms-cache
          cache-to: type=local,mode=max,dest=/tmp/.cypress-ms-cache-new
          outputs: type=docker,dest=/tmp/ms.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ms
          path: /tmp/ms.tar

      - name: Move cache
        run: |
          rm -rf /tmp/.cypress-ms-cache
          mv /tmp/.cypress-ms-cache-new /tmp/.cypress-ms-cache

  docker-auth-service:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Load cached Docker auth service layers
        uses: actions/cache@v2
        with:
          path: /tmp/.cypress-as-cache
          key: ${{ runner.os }}-cypress-as-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cypress-as-

      - name: Build auth-service
        uses: docker/build-push-action@v2
        with:
          file: ./auth-service/Dockerfile
          context: .
          push: false
          load: true
          tags: auth-service:latest
          cache-from: type=local,src=/tmp/.cypress-as-cache
          cache-to: type=local,mode=max,dest=/tmp/.cypress-as-cache-new
          outputs: type=docker,dest=/tmp/as.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: as
          path: /tmp/as.tar

      - name: Move cache
        run: |
          rm -rf /tmp/.cypress-as-cache
          mv /tmp/.cypress-as-cache-new /tmp/.cypress-as-cache

  tests:
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [docker-admin-ui, docker-marketplace-service, docker-auth-service]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download admin-ui image
        uses: actions/download-artifact@v2
        with:
          name: au
          path: /tmp

      - name: Download authentication-service image
        uses: actions/download-artifact@v2
        with:
          name: ms
          path: /tmp

      - name: Download marketplace-service image
        uses: actions/download-artifact@v2
        with:
          name: as
          path: /tmp

      - name: Load downloaded images and start containers
        working-directory: ./infrastructure/start_all_prebuilt
        run: |
          docker load --input /tmp/au.tar
          docker load --input /tmp/as.tar
          docker load --input /tmp/ms.tar
          docker-compose up -d postgres_am_db admin-ui marketplace-service postgres_user_db auth-service

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: am-ui/package-lock.json
      - run: pnpm install --frozen-lockfile
        working-directory: ./am-ui
      - run: pnpm build:webcomponents
        working-directory: ./am-ui
      - run: pnpm e2e:headless
        working-directory: ./am-ui
      - name: Stop containers
        working-directory: ./infrastructure/start_all_local
        if: always()
        run: docker-compose down