# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run a linter across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend

on:
  push:
    paths:
      - "am-ui/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    paths:
      - "am-ui/**"
      - ".github/workflows/frontend.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./am-ui

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: am-ui/package-lock.json
      - name: Install UI
        run: npm ci
      - name: Build UI
        run: npm run build --if-present
      - name: Lint UI
        run: npm run lint
      - name: Test UI
        run: npm run test

      - name: Install webcomponents
        working-directory: ./am-ui/webcomponents
        run: npm ci
      - name: Build webcomponents
        working-directory: ./am-ui/webcomponents
        run: npm run build
      - name: Lint webcomponents
        working-directory: ./am-ui/webcomponents
        run: npm run lint
      - name: Test webcomponents
        working-directory: ./am-ui/webcomponents
        run: npm run test
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./am-ui
    steps:
      - uses: actions/checkout@v2
      - uses: azure/docker-login@v1
        with:
          login-server: akrosmarketplace.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          docker build . -t akrosmarketplace.azurecr.io/am-ui:${{ github.sha }}
          docker push akrosmarketplace.azurecr.io/am-ui:${{ github.sha }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: "am-ui"
          publish-profile: ${{ secrets.AM_UI_PUBLISH_PROFILE }}
          images: "akrosmarketplace.azurecr.io/am-ui:${{ github.sha }}"
