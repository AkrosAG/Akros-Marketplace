openapi: 3.0.3
info:
  title: Akros Marketplace Search
  version: 1.0.0
  x-api-id: k1288a31-c22b-12d4-2a87-78c198d3bc32
  x-audience: company-internal
  description: YAML Swagger Configuration for the Akros Marketplace search webcomponen
  contact:
    name: Akros Marketplace API Support
    url: https://www.akros.ch/kontakt/
    email: support@example.com

paths:
  /categories:
    get:
      tags:
        - Categories
      summary: List categories
      description: used for primary search page
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponseDTO"
        default:
          description: Unexpected error
          content:
            "application/problem+json":
              schema:
                $ref: "#/components/schemas/Problem"

  #/topic-searches:
  /topics/searches:
    post:
      tags:
        - Topics
      summary: Search for topics
      description: Search for topics
      requestBody:
        description: All fields for search query
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopicSearchRequestDTO"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicSearchListResponseDTO"
        default:
          description: Unexpected error
          content:
            "application/problem+json":
              schema:
                $ref: "#/components/schemas/Problem"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    CategoryResponseDTO:
      type: object
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CategoryDTO"

    CategoryDTO:
      type: object
      required:
        - category_id
        - key
        - fields
      properties:
        category_id:
          type: integer
          format: int64
        key:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FieldResponseDTO"

    FieldResponseDTO:
      type: object
      required:
        - field_id
        - field_type_definition_id
        - key
        - creation
      properties:
        field_id:
          type: integer
          format: int64
        field_type_definition_id:
          type: integer
          format: int32
        key:
          type: string
        sort_number:
          type: integer
          format: int32
        min_value:
          type: integer
          format: int32
        max_value:
          type: integer
          format: int32
        searchable:
          type: boolean
        request:
          type: boolean
        offer:
          type: boolean
        creation:
          type: boolean
        field_options:
          type: array
          items:
            $ref: "#/components/schemas/FieldOptionResponseDTO"

    FieldOptionResponseDTO:
      type: object
      required:
        - field_option_id
        - key
      properties:
        field_option_id:
          type: integer
          format: int64
        key:
          type: string
        sort_number:
          type: integer
          format: int32

    TopicSearchRequestDTO:
      type: object
      required:
        - category_id
        - request_or_offer
      properties:
        category_id:
          type: integer
          format: int64
        request_or_offer:
          type: boolean
        search_values:
          type: array
          items:
            $ref: "#/components/schemas/TopicSearchFieldValuesRequestDTO"

    TopicSearchFieldValuesRequestDTO:
      type: object
      required:
        - field_id
        - value
      properties:
        field_id:
          type: integer
          format: int64
        value_num_from:
          type: integer
          format: int32
        value_num_to:
          type: integer
          format: int32
        value:
          type: string

    TopicSearchListResponseDTO:
      type: object
      required:
        - column_header
        - topics
      properties:
        column_header:
          type: array
          items:
            $ref: "#/components/schemas/TopicSearchColumnHeaderResponseDTO"
        topics:
          type: array
          items:
            $ref: "#/components/schemas/TopicSearchResponseDTO"

    TopicSearchColumnHeaderResponseDTO:
      type: object
      required:
        - field_id
      properties:
        field_id:
          type: integer
          format: int64
        description:
          type: string
          example: Beschreibung
        short_description:
          type: string
          example: Beschreibung der Unterkunft

    TopicSearchResponseDTO:
      type: object
      required:
        - topic_id
      properties:
        topic_id:
          type: integer
          format: int64
        topic_values:
          type: array
          items:
            $ref: "#/components/schemas/TopicSearchValueResponseDTO"

    TopicSearchValueResponseDTO:
      type: object
      required:
        - topic_id
        - field_id
        - value
      properties:
        topic_id:
          type: integer
          format: int64
        field_id:
          type: integer
          format: int64
        value:
          type: string
        field_definition_id:
          type: integer
          format: int32
        field_definition_description:
          type: string
          example: Number

    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: >
            A URI reference that uniquely identifies the problem type only in the
            context of the provided API. Opposed to the specification in RFC-7807,
            it is neither recommended to be dereferenceable and point to a
            human-readable documentation nor globally unique for the problem type.
          default: "about:blank"
          example: "/problem/connection-error"
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable
            for engineers, usually not suited for non technical stakeholders and
            not localized.
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurrence of the
            problem that is helpful to locate the problem and give advice on how
            to proceed. Written in English and readable for engineers, usually not
            suited for non technical stakeholders and not localized.
          example: Connection to database timed out
        instance:
          type: string
          format: uri-reference
          description: >
            A URI reference that identifies the specific occurrence of the problem,
            e.g. by adding a fragment identifier or sub-path to the problem type.
            May be used to locate the root of this problem in the source code.
          example: "/problem/connection-error#token-info-read-timed-out"

security:
  - bearerAuth: []
