version: "3.9"

services:
  client-ui:
    container_name: client-ui
    build:
      context: ../..
      dockerfile: ./am-ui/Dockerfile.local
    ports:
      - 4200:443
    networks:
      marketplacenet:
    depends_on:
      marketplace-service:
        condition: service_started
      auth-service:
        condition: service_healthy

  marketplace-service:
    container_name: marketplace-service
    build:
      context: ../..
      dockerfile: ./marketplace-service/Dockerfile.local
    ports:
      - 8443:8443
      - 5005:5005
    environment:
      - POSTGRES_AM_DB_URL=jdbc:postgresql://postgres_am_db:5432/am
      - POSTGRES_AM_DB_USERNAME=am
      - POSTGRES_AM_DB_PASSWORD=am
    networks:
      marketplacenet:
    depends_on:
      auth-service:
        condition: service_healthy
      postgres_am_db:
        condition: service_healthy

  auth-service:
    container_name: auth-service
    build:
      context: ../..
      dockerfile: ./infrastructure/keycloak/Dockerfile.local
    ports:
      - '9090:9090'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB_URL=jdbc:postgresql://keycloak_db:5432/keycloakdb
      - KC_DB_USERNAME=keycloakdb
      - KC_DB_PASSWORD=keycloakdb
    networks:
      marketplacenet:
    depends_on:
      keycloak_db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:9090/realms/akros-marketplace" ]
      interval: 10s
      timeout: 30s
      retries: 20

  postgres_am_db:
    image: postgres:14.1
    container_name: postgres_am_db
    hostname: postgres_am_db
    deploy:
      mode: global
    environment:
      - POSTGRES_USER=am
      - POSTGRES_PASSWORD=am
      - POSTGRES_DB=am
    volumes:
      - "../pg_data_am:/var/lib/postgresql/data"
      - "../db_init_am:/docker-entrypoint-initdb.d/"
    ports:
      - 5432:5432
    networks:
      marketplacenet:
        aliases:
          - postgres_am_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "am", "-U", "am"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak_db:
    image: postgres:14.1
    container_name: keycloak_db
    hostname: keycloak_db
    deploy:
      mode: global
    environment:
      - POSTGRES_USER=keycloakdb
      - POSTGRES_PASSWORD=keycloakdb
      - POSTGRES_DB=keycloakdb
    volumes:
      - "../pg_data_keycloakdb:/var/lib/postgresql/data"
      - "../db_init_keycloakdb:/docker-entrypoint-initdb.d/"
    ports:
      - 5434:5432
    networks:
      marketplacenet:
        aliases:
          - keycloak_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "keycloakdb", "-U", "keycloakdb"]
      interval: 10s
      timeout: 5s
      retries: 5

#  auth-service:
#    container_name: auth-service
#    build:
#      context: ../..
#      dockerfile: ./auth-service/Dockerfile
#    ports:
#      - 9443:9443
#    environment:
#      - POSTGRES_USER_DB_URL=jdbc:postgresql://postgres_user_db:5432/userdb
#      - POSTGRES_USER_DB_USERNAME=userdb
#      - POSTGRES_USER_DB_PASSWORD=userdb
#    networks:
#      marketplacenet:
#    depends_on:
#      postgres_user_db:
#        condition: service_healthy

#  admin-ui:
#    container_name: admin-ui
#    build:
#      context: ../..
#      dockerfile: ./admin-ui/Dockerfile
#    ports:
#      - 9090:9090
#    environment:
#      - POSTGRES_AM_DB_URL=jdbc:postgresql://postgres_am_db:5432/am
#      - POSTGRES_AM_DB_USERNAME=am
#      - POSTGRES_AM_DB_PASSWORD=am
#    networks:
#      marketplacenet:
#    depends_on:
#      postgres_am_db:
#        condition: service_healthy

#  postgres_user_db:
#    image: postgres:14.1
#    container_name: postgres_user_db
#    hostname: postgres_user_db
#    deploy:
#      mode: global
#    environment:
#      - POSTGRES_USER=userdb
#      - POSTGRES_PASSWORD=userdb
#      - POSTGRES_DB=userdb
#    volumes:
#      - "../pg_data_userdb:/var/lib/postgresql/data"
#      - "../db_init_userdb:/docker-entrypoint-initdb.d/"
#    ports:
#      - 5433:5432
#    networks:
#      marketplacenet:
#        aliases:
#          - postgres_user_db
#    healthcheck:
#      test: ["CMD", "pg_isready", "-q", "-d", "userdb", "-U", "userdb"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

networks:
  marketplacenet: