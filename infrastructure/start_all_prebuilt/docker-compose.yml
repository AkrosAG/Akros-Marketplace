version: "3.9"

services:
  client-ui:
    container_name: client-ui
    image: marketplace-service:latest
    ports:
      - 4200:443
    networks:
      marketplacenet:
    depends_on:
      - marketplace-service
      - auth-service

  marketplace-service:
    container_name: marketplace-service
    image: marketplace-service:latest
    ports:
      - 8443:8443
    environment:
      - POSTGRES_AM_DB_URL=jdbc:postgresql://postgres_am_db:5432/am
      - POSTGRES_AM_DB_USERNAME=am
      - POSTGRES_AM_DB_PASSWORD=am
    networks:
      marketplacenet:
    depends_on:
      postgres_am_db:
        condition: service_healthy

  auth-service:
    container_name: auth-service
    image: auth-service:latest
    ports:
      - 8080:8080
    environment:
      - POSTGRES_USER_DB_URL=jdbc:postgresql://postgres_user_db:5432/userdb
      - POSTGRES_USER_DB_USERNAME=userdb
      - POSTGRES_USER_DB_PASSWORD=userdb
    networks:
      marketplacenet:
    depends_on:
      postgres_user_db:
        condition: service_healthy

  admin-ui:
    container_name: admin-ui
    image: admin-ui:latest
    ports:
      - 9090:9090
    environment:
      - POSTGRES_AM_DB_URL=jdbc:postgresql://postgres_am_db:5432/am
      - POSTGRES_AM_DB_USERNAME=am
      - POSTGRES_AM_DB_PASSWORD=am
    networks:
      marketplacenet:
    depends_on:
      postgres_am_db:
        condition: service_healthy

  postgres_am_db:
    image: postgres:14.1
    container_name: postgres_am_db
    hostname: postgres_am_db
    deploy:
      mode: global
    environment:
      - POSTGRES_USER=am
      - POSTGRES_PASSWORD=am
      - POSTGRES_DB=am
    volumes:
      - "../pg_data_am:/var/lib/postgresql/data"
      - "../db_init_am:/docker-entrypoint-initdb.d/"
    ports:
      - 5432:5432
    networks:
      marketplacenet:
        aliases:
          - postgres_am_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "am", "-U", "am"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_user_db:
    image: postgres:14.1
    container_name: postgres_user_db
    hostname: postgres_user_db
    deploy:
      mode: global
    environment:
      - POSTGRES_USER=userdb
      - POSTGRES_PASSWORD=userdb
      - POSTGRES_DB=userdb
    volumes:
      - "../pg_data_userdb:/var/lib/postgresql/data"
      - "../db_init_userdb:/docker-entrypoint-initdb.d/"
    ports:
      - 5433:5432
    networks:
      marketplacenet:
        aliases:
          - postgres_user_db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "userdb", "-U", "userdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.39.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"

  grafana:
    image: grafana/grafana:9.2.2
    container_name: grafana
    environment:
      - GF_AUTH_PROXY_ENABLED=true
      - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning/
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

networks:
  marketplacenet:
